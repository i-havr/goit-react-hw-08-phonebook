{"version":3,"file":"static/js/500.4407ecda.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","pages/ContactsPage/ContactsPage.styled.jsx","components/ContactForm.jsx/ContactForm.styled.jsx","components/ContactForm.jsx/ContactForm.jsx","redux/filter/filter-selectors.js","components/ContactsList/ContactsList.styled.jsx","components/Button/ButtonDelete.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectLoadingStatus = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const ContactsPageStyled = styled.main`\n  display: block;\n  width: 100%;\n  /* height: 100%; */\n`;\n\nexport const SectionStyled = styled.section`\n  display: block;\n  max-width: 1600px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 64px 0px;\n\n  @media screen and (max-width: 768px) {\n  }\n\n  @media screen and (max-width: 1200px) {\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  min-height: 100%;\n  margin-left: auto;\n  margin-right: auto;\n\n  & > h1 {\n    font-size: 22px;\n    margin-bottom: 16px;\n  }\n\n  & > p {\n    margin-bottom: 16px;\n    font-size: 10px;\n    font-style: italic;\n  }\n\n  @media screen and (min-width: 480px) {\n    & > p {\n      margin-bottom: 16px;\n      font-size: 14px;\n      font-style: italic;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    & > h1 {\n      font-size: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n\n    & > p {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const FormWrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  min-width: 300px;\n  margin: 0;\n\n  @media screen and (min-width: 480px) {\n    min-width: 400px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: start;\n    width: 800px;\n  }\n`;\n\nexport const FilterWrapperStyled = styled.div`\n  width: 100%;\n\n  & > ul {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: start;\n    width: 80%;\n    border: 1px solid #729599;\n    border-radius: 5px;\n    padding: 8px 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 80%;\n  min-width: 80px;\n  margin-bottom: 40px;\n  border: 1px solid #729599;\n  border-radius: 5px;\n  padding: 8px 16px 8px 16px;\n\n  & > button {\n  }\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 0px;\n    margin-right: 64px;\n  }\n`;\n\nexport const LabelInputStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #252f38;\n  & > input {\n    border: 1px solid black;\n    border-radius: 3px;\n    padding: 4px;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { Button } from 'components/Button/Button';\nimport {\n  ContactFormStyled,\n  LabelInputStyled,\n} from 'components/ContactForm.jsx/ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = { name, number };\n    if (contacts?.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <ContactFormStyled onSubmit={handleSubmit}>\n      <LabelInputStyled>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelInputStyled>\n\n      <LabelInputStyled>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelInputStyled>\n      <Button>Add</Button>\n    </ContactFormStyled>\n  );\n}\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  /* padding-left: 20px; */\n  width: 80%;\n  color: black;\n\n  @media screen and (min-width: 1200px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledDeleteButton } from './Button.styled';\n\nexport const ButtonDelete = ({ type = 'button', children, actionHandler }) => {\n  return (\n    <StyledDeleteButton type={type} onClick={actionHandler}>\n      {children}\n    </StyledDeleteButton>\n  );\n};\n\nButtonDelete.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  actionHandler: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsListItemStyled = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%\n  /* margin-bottom: 5px; */\n  padding-right: 20px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  \n  color: #729599;\n\n  &:not(:last-child){\n  border-bottom: 1px solid #BCC5CE;\n  }\n\n  & > svg{\n    margin: 0;\n    padding: 0;\nmargin-right: 8px;\n  }\n  /* &::before {\n    content: '';\n    width: 10px;\n    height: 10px;\n    margin-right: 10px;\n    border-radius: 50%;\n    background-color: #729599;\n  } */\n`;\n\nexport const InnerElementStyled = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  width: 100%;\n  color: black;\n  font-size: 14px;\n`;\n","import PropTypes from 'prop-types';\nimport { IoIosContact } from 'react-icons/io';\nimport { ButtonDelete } from 'components/Button/ButtonDelete';\nimport {\n  ContactsListItemStyled,\n  InnerElementStyled,\n} from 'components/ContactsListItem/ContactsListItem.styled';\n\nexport const ContactsListItem = ({ id, name, number, onDeleteButton }) => {\n  return (\n    <ContactsListItemStyled>\n      <IoIosContact size={32} />\n      <InnerElementStyled>\n        <b>{`${name}`}</b>\n        {`${number}`}\n      </InnerElementStyled>\n      <ButtonDelete actionHandler={() => onDeleteButton(id)}>X</ButtonDelete>\n    </ContactsListItemStyled>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.node.isRequired,\n  onDeleteButton: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { ContactsListStyled } from './ContactsList.styled';\nimport { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  if (visibleContacts.length > 0) {\n    return (\n      <>\n        <ContactsListStyled>\n          {visibleContacts.map(({ id, name, number }) => {\n            return (\n              <ContactsListItem\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                onDeleteButton={id => dispatch(deleteContact(id))}\n              />\n            );\n          })}\n        </ContactsListStyled>\n      </>\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const LabelFilterStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: bold;\n  width: 80%;\n  min-width: 80px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 8px;\n  color: #252f38;\n  & > input {\n    border: 1px solid black;\n    border-radius: 3px;\n    padding: 4px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 100%;\n  }\n`;\n\nexport const InputFilterStyled = styled.input`\n  width: 97%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { namesFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { LabelFilterStyled, InputFilterStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <LabelFilterStyled>\n      Find contacts by name\n      <InputFilterStyled\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => dispatch(namesFilter(event.currentTarget.value))}\n      />\n    </LabelFilterStyled>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"64\"\n    width=\"64\"\n    radius=\"9\"\n    color=\"#729599\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{\n      justifyContent: 'center',\n    }}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { notifyError } from 'components/Notify/NotifyError';\nimport {\n  selectLoadingStatus,\n  selectError,\n} from 'redux/contacts/contacts-selectors';\nimport { Toaster } from 'react-hot-toast';\nimport {\n  ContactsPageStyled,\n  ContainerStyled,\n  SectionStyled,\n  FormWrapperStyled,\n  FilterWrapperStyled,\n} from './ContactsPage.styled';\nimport ContactForm from 'components/ContactForm.jsx/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    error && notifyError(error);\n  }, [error]);\n  return (\n    <ContactsPageStyled>\n      <SectionStyled>\n        <ContainerStyled>\n          <h1>This is Your Phonebook</h1>\n          <p>You can add, delete and search contacts. Just try!</p>\n          <FormWrapperStyled>\n            <ContactForm />\n            <FilterWrapperStyled>\n              <Filter />\n              <ContactsList />\n              {isLoading && <Loader />}\n            </FilterWrapperStyled>\n          </FormWrapperStyled>\n          <Toaster />\n        </ContainerStyled>\n      </SectionStyled>\n    </ContactsPageStyled>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoadingStatus","isLoading","selectError","error","ContactsPageStyled","styled","SectionStyled","ContainerStyled","FormWrapperStyled","FilterWrapperStyled","ContactFormStyled","LabelInputStyled","ContactForm","useState","name","setName","number","setPhone","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","resetForm","onSubmit","preventDefault","newContact","some","contact","alert","addContact","type","onChange","pattern","title","required","Button","selectFilter","filter","ContactsListStyled","ButtonDelete","children","actionHandler","onClick","ContactsListItemStyled","InnerElementStyled","ContactsListItem","id","onDeleteButton","size","ContactsList","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","length","map","deleteContact","LabelFilterStyled","InputFilterStyled","Filter","namesFilter","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","ContactsPage","notifyError"],"sourceRoot":""}