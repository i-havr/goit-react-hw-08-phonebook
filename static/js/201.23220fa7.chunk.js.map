{"version":3,"file":"static/js/201.23220fa7.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","pages/ContactsPage/ContactsPage.styled.jsx","components/ContactForm.jsx/ContactForm.styled.jsx","components/ContactForm.jsx/ContactForm.jsx","redux/filter/filter-selectors.js","components/ContactsList/ContactsList.styled.jsx","components/Button/ButtonDelete.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","redux/modal/modal-selectors.js","components/EditForm/EditForm.styled.jsx","components/EditForm/EditForm.jsx","components/ModalEdit/ModalEdit.styled.jsx","components/ModalEdit/ModalEdit.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectLoadingStatus = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const ContactsPageStyled = styled.main`\n  display: block;\n  width: 100%;\n`;\n\nexport const SectionStyled = styled.section`\n  display: block;\n  max-width: 1600px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 64px 0px;\n`;\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  min-height: 100%;\n  margin-left: auto;\n  margin-right: auto;\n\n  & > h1 {\n    font-size: 22px;\n    margin-bottom: 16px;\n  }\n\n  & > p {\n    margin-bottom: 16px;\n    font-size: 10px;\n    font-style: italic;\n  }\n\n  @media screen and (min-width: 480px) {\n    & > p {\n      margin-bottom: 16px;\n      font-size: 14px;\n      font-style: italic;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    & > h1 {\n      font-size: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n\n    & > p {\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nexport const FormWrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  min-width: 300px;\n  margin: 0;\n\n  @media screen and (min-width: 480px) {\n    min-width: 400px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: start;\n    width: 800px;\n  }\n`;\n\nexport const FilterWrapperStyled = styled.div`\n  width: 100%;\n\n  & > ul {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: start;\n    width: 80%;\n    border: 1px solid #729599;\n    border-radius: 5px;\n    padding: 8px 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 80%;\n  min-width: 80px;\n  margin-bottom: 40px;\n  border: 1px solid #729599;\n  border-radius: 5px;\n  padding: 8px 16px 8px 16px;\n\n  & > button {\n  }\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 0px;\n    margin-right: 64px;\n  }\n`;\n\nexport const LabelInputStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #252f38;\n  & > input {\n    border: 1px solid black;\n    border-radius: 3px;\n    padding: 4px;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { Button } from 'components/Button/Button';\nimport {\n  ContactFormStyled,\n  LabelInputStyled,\n} from 'components/ContactForm.jsx/ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = { name, number };\n\n    if (contacts?.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <ContactFormStyled onSubmit={handleSubmit}>\n      <LabelInputStyled>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelInputStyled>\n\n      <LabelInputStyled>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelInputStyled>\n      <Button>Add</Button>\n    </ContactFormStyled>\n  );\n}\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  /* padding-left: 20px; */\n  width: 80%;\n  color: black;\n\n  @media screen and (min-width: 1200px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledDeleteButton } from './Button.styled';\n\nexport const ButtonDelete = ({ type = 'button', children, actionHandler }) => {\n  return (\n    <StyledDeleteButton type={type} onClick={actionHandler}>\n      {children}\n    </StyledDeleteButton>\n  );\n};\n\nButtonDelete.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.any.isRequired,\n  actionHandler: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsListItemStyled = styled.li`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n \n  max-width: 100%\n  padding-right: 20px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  \n  color: #729599;\n\n  &:not(:last-child){\n  border-bottom: 1px solid #BCC5CE;\n  }\n\n  & > svg{\n    margin: 0;\n    padding: 0;\nmargin-right: 8px;\n  }\n\n  & > button{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s ease;\n\n  &:not(:last-child){\n  margin-right: 4px;\n  }\n\n    &:hover{\n    max-width: 100px;\n    padding: 8px;\n    }\n\n    &>svg{\n      opacity: 1;\n    }\n    & > p {\n      transition: all 0.3s ease;\n      display: none;\n      opacity: 0;\n    }\n\n\n\n    \n\n    &:hover svg {\n        display: none;\n        opacity: 0;\n    }\n    &:hover p {\n        display: inline;\n        opacity: 1;\n    }\n\n  \n  }\n`;\n\nexport const InnerElementStyled = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  color: black;\n  margin-right: auto;\n  font-size: 14px;\n`;\n","import PropTypes from 'prop-types';\nimport { IoIosContact } from 'react-icons/io';\nimport { MdDelete } from 'react-icons/md';\nimport { AiFillEdit } from 'react-icons/ai';\nimport { ButtonDelete } from 'components/Button/ButtonDelete';\nimport {\n  ContactsListItemStyled,\n  InnerElementStyled,\n} from 'components/ContactsListItem/ContactsListItem.styled';\n\nexport const ContactsListItem = ({\n  id,\n  name,\n  number,\n  onEditButton,\n  onDeleteButton,\n}) => {\n  return (\n    <ContactsListItemStyled>\n      <IoIosContact size={32} />\n      <InnerElementStyled>\n        <b>{`${name}`}</b>\n        {`${number}`}\n      </InnerElementStyled>\n      <ButtonDelete actionHandler={() => onEditButton(id)}>\n        <AiFillEdit size={16} /> <p>Edit</p>\n      </ButtonDelete>\n      <ButtonDelete actionHandler={() => onDeleteButton(id)}>\n        <MdDelete size={16} />\n        <p>Delete</p>\n      </ButtonDelete>\n    </ContactsListItemStyled>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.node.isRequired,\n  onDeleteButton: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { ContactsListStyled } from './ContactsList.styled';\nimport { ContactsListItem } from 'components/ContactsListItem/ContactsListItem';\nimport { setModal } from 'redux/modal/modal-slice';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  if (visibleContacts.length > 0) {\n    return (\n      <>\n        <ContactsListStyled>\n          {visibleContacts.map(({ id, name, number }) => {\n            return (\n              <ContactsListItem\n                key={id}\n                id={id}\n                name={name}\n                number={number}\n                onEditButton={id => dispatch(setModal(id))}\n                onDeleteButton={id => dispatch(deleteContact(id))}\n              />\n            );\n          })}\n        </ContactsListStyled>\n      </>\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const LabelFilterStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: bold;\n  width: 80%;\n  min-width: 80px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 8px;\n  color: #252f38;\n  & > input {\n    border: 1px solid black;\n    border-radius: 3px;\n    padding: 4px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 100%;\n  }\n`;\n\nexport const InputFilterStyled = styled.input`\n  width: 97%;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { namesFilter } from 'redux/filter/filter-slice';\nimport { selectFilter } from 'redux/filter/filter-selectors';\nimport { LabelFilterStyled, InputFilterStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <LabelFilterStyled>\n      Find contacts by name\n      <InputFilterStyled\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => dispatch(namesFilter(event.currentTarget.value))}\n      />\n    </LabelFilterStyled>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"64\"\n    width=\"64\"\n    radius=\"9\"\n    color=\"#729599\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{\n      justifyContent: 'center',\n    }}\n    wrapperClassName=\"\"\n    visible={true}\n  />\n);\n","export const selectIsModalOpen = state => state.modal.isModalOpen;\n\nexport const selectId = state => state.modal.id;\n","import styled from 'styled-components';\n\nexport const EditFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0 auto 0 auto;\n  border: 1px solid #729599;\n  border-radius: 5px;\n  padding: 8px 16px 8px 16px;\n`;\n\nexport const LabelInputStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  color: #252f38;\n  & > input {\n    border: 1px solid black;\n    border-radius: 3px;\n    padding: 4px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { selectId } from 'redux/modal/modal-selectors';\nimport { setModal } from 'redux/modal/modal-slice';\nimport { editContact } from 'redux/contacts/contacts-operations';\nimport {\n  EditFormStyled,\n  LabelInputStyled,\n  ButtonsWrapper,\n} from './EditForm.styled';\nimport { Button } from 'components/Button/Button';\n\nexport const EditForm = () => {\n  const dispatch = useDispatch();\n  const [changedName, setChangedName] = useState('');\n  const [changedNumber, setChangedNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const contactId = useSelector(selectId);\n\n  useEffect(() => {\n    if (!contacts) {\n      return;\n    }\n    const contactInformation = contacts.find(({ id }) => id === contactId);\n    const { name, number } = contactInformation;\n    setChangedName(name);\n    setChangedNumber(number);\n  }, [contactId, contacts]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setChangedName(value);\n        break;\n\n      case 'number':\n        setChangedNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newValues = { name: changedName, number: changedNumber };\n\n    if (contacts.some(contact => contact.name === newValues.name)) {\n      return alert(`${newValues.name} is already in contacts.`);\n    } else {\n      dispatch(editContact({ id: contactId, contact: { ...newValues } }));\n      dispatch(setModal());\n    }\n  };\n\n  return (\n    <EditFormStyled autoComplete=\"off\" onSubmit={handleSubmit}>\n      <LabelInputStyled>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={changedName}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoFocus\n        />\n      </LabelInputStyled>\n\n      <LabelInputStyled>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={changedNumber}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelInputStyled>\n      <ButtonsWrapper>\n        <Button>Save changes</Button>\n        <Button type=\"button\" actionHandler={() => dispatch(setModal())}>\n          Cancel\n        </Button>\n      </ButtonsWrapper>\n    </EditFormStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BackdropStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  transition: all 0.3s ease;\n`;\n\nexport const ModalStyled = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: flex;\n  justify-content: center;\n  width: 270px;\n  padding: 16px;\n  background-color: #e6dfd9;\n  border-radius: 5px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  transform: translate(-50%, -50%) scale(1);\n\n  @media screen and (min-width: 480px) {\n    padding: 32px;\n    width: 350px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { setModal } from 'redux/modal/modal-slice';\nimport { EditForm } from 'components/EditForm/EditForm';\nimport { BackdropStyled, ModalStyled } from './ModalEdit.styled';\n\nexport const ModalEdit = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      event.code === 'Escape' && dispatch(setModal());\n    };\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [dispatch]);\n\n  const handleBackdropClick = event => {\n    event.currentTarget === event.target && dispatch(setModal());\n  };\n\n  return createPortal(\n    <BackdropStyled onClick={handleBackdropClick}>\n      <ModalStyled>\n        <EditForm />\n      </ModalStyled>\n    </BackdropStyled>,\n    document.querySelector('#modal-root')\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { notifyError } from 'components/Notify/NotifyError';\nimport {\n  selectLoadingStatus,\n  selectError,\n} from 'redux/contacts/contacts-selectors';\nimport { Toaster } from 'react-hot-toast';\nimport {\n  ContactsPageStyled,\n  ContainerStyled,\n  SectionStyled,\n  FormWrapperStyled,\n  FilterWrapperStyled,\n} from './ContactsPage.styled';\nimport ContactForm from 'components/ContactForm.jsx/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit';\nimport { selectIsModalOpen } from 'redux/modal/modal-selectors';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectError);\n  const isModalOpen = useSelector(selectIsModalOpen);\n\n  useEffect(() => {\n    error && notifyError(error);\n  }, [error]);\n\n  if (isModalOpen) {\n    document.body.classList.add('modal-open');\n  } else {\n    document.body.classList.remove('modal-open');\n  }\n\n  return (\n    <>\n      {isModalOpen && <ModalEdit />}\n      <ContactsPageStyled>\n        <SectionStyled>\n          <ContainerStyled>\n            <h1>This is Your Phonebook</h1>\n            <p>You can add, edit and delete your contacts!</p>\n            <FormWrapperStyled>\n              <ContactForm />\n              <FilterWrapperStyled>\n                <Filter />\n                <ContactsList />\n                {isLoading && <Loader />}\n              </FilterWrapperStyled>\n            </FormWrapperStyled>\n            <Toaster />\n          </ContainerStyled>\n        </SectionStyled>\n      </ContactsPageStyled>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectLoadingStatus","isLoading","selectError","error","ContactsPageStyled","styled","SectionStyled","ContainerStyled","FormWrapperStyled","FilterWrapperStyled","ContactFormStyled","LabelInputStyled","ContactForm","useState","name","setName","number","setPhone","useSelector","dispatch","useDispatch","handleInputChange","event","currentTarget","value","resetForm","onSubmit","preventDefault","newContact","some","contact","alert","addContact","type","onChange","pattern","title","required","Button","selectFilter","filter","ContactsListStyled","ButtonDelete","children","actionHandler","onClick","ContactsListItemStyled","InnerElementStyled","ContactsListItem","id","onEditButton","onDeleteButton","size","ContactsList","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","length","map","setModal","deleteContact","LabelFilterStyled","InputFilterStyled","Filter","namesFilter","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","selectIsModalOpen","modal","isModalOpen","selectId","EditFormStyled","ButtonsWrapper","EditForm","changedName","setChangedName","changedNumber","setChangedNumber","contactId","contactInformation","find","autoComplete","newValues","editContact","autoFocus","BackdropStyled","ModalStyled","ModalEdit","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","target","document","querySelector","ContactsPage","notifyError","body","classList","add","remove"],"sourceRoot":""}